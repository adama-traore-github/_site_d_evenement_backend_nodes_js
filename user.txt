
# üìí Cahier des charges des requ√™tes SQL ‚Äì Projet √âv√©nements (MIS √Ä JOUR)

---

## 0) Connexion √† la base de donn√©es (√©tape 0, obligatoire)

### 0.1 ‚Äî Depuis la machine (super-utilisateur postgres)

```bash
# se connecter en tant que postgres et ouvrir psql sur la DB event_db
sudo -u postgres psql -d event_db
```

-- se connecter √† une base (si pas d√©j√†)
\c event_db

-- lister les tables du sch√©ma public
\dt

-- voir la structure d'une table
\d utilisateurs
```

### 0.4 ‚Äî Cr√©er un utilisateur / base (si n√©cessaire)

```bash
# cr√©er un role avec mot de passe
sudo -u postgres createuser -P appuser
# cr√©er la base et en donner la propri√©t√©
sudo -u postgres createdb -O appuser event_db
# OU depuis psql en tant que postgres :
CREATE USER appuser WITH PASSWORD 'securepass';
CREATE DATABASE event_db OWNER appuser;
GRANT ALL PRIVILEGES ON DATABASE event_db TO appuser;
```
## 1) Utilisateurs (`utilisateurs`)

* **Cr√©er un utilisateur**

```sql
INSERT INTO utilisateurs (prenom, nom, email, mot_de_passe)
VALUES ('Adama', 'Traor√©', 'adama.traore@email.com', 'hash_mdp');
```

* **Lister tous (sans mot de passe)**

```sql
SELECT id, prenom, nom, email, cree_le
FROM utilisateurs
ORDER BY id;
```

* **Voir par ID**

```sql
SELECT id, prenom, nom, email, cree_le
FROM utilisateurs
WHERE id = 1;
```

* **Mettre √† jour**

```sql
UPDATE utilisateurs
SET prenom = 'NouveauPrenom', nom = 'NouveauNom'
WHERE id = 1;
```

* **Supprimer**

```sql
DELETE FROM utilisateurs WHERE id = 1;
```

---

## 2) √âv√©nements (`evenements`)

* **Cr√©er**

```sql
INSERT INTO evenements (nom, description, date, lieu, est_gratuit, prix, organisateur_id)
VALUES ('Conf√©rence Tech', 'Conf√©rence sur Node.js', '2025-10-01 10:00:00', 'Ouagadougou', FALSE, 5000, 1);
```

* **Lister**

```sql
SELECT id, nom, date, lieu, est_gratuit, prix
FROM evenements
ORDER BY date DESC;
```

* **Voir par ID**

```sql
SELECT * FROM evenements WHERE id = 2;
```

* **Mettre √† jour**

```sql
UPDATE evenements
SET nom = 'Conf√©rence Tech mise √† jour', mis_a_jour_le = NOW()
WHERE id = 2;
```

* **Supprimer**

```sql
DELETE FROM evenements WHERE id = 2;
```

* **Par organisateur**

```sql
SELECT id, nom, date, lieu
FROM evenements
WHERE organisateur_id = 1
ORDER BY date DESC;
```

---

## 3) Inscriptions (`inscriptions`)

* **S‚Äôinscrire**

```sql
INSERT INTO inscriptions (utilisateur_id, evenement_id)
VALUES (1, 2);
```

* **Inscrits d‚Äôun √©v√©nement**

```sql
SELECT u.id, u.prenom, u.nom, u.email
FROM inscriptions i
JOIN utilisateurs u ON i.utilisateur_id = u.id
WHERE i.evenement_id = 2;
```

* **√âv√©nements d‚Äôun utilisateur**

```sql
SELECT e.id, e.nom, e.date, e.lieu
FROM inscriptions i
JOIN evenements e ON i.evenement_id = e.id
WHERE i.utilisateur_id = 1;
```

* **D√©sinscription**

```sql
DELETE FROM inscriptions
WHERE utilisateur_id = 1 AND evenement_id = 2;
```

---

## 4) Commentaires (`commentaires`)

* **Ajouter**

```sql
INSERT INTO commentaires (contenu, utilisateur_id, evenement_id)
VALUES ('Super conf√©rence !', 1, 2);
```

* **Lister**

```sql
SELECT c.id, c.contenu, c.cree_le, u.prenom, u.nom
FROM commentaires c
JOIN utilisateurs u ON c.utilisateur_id = u.id
WHERE c.evenement_id = 2
ORDER BY c.cree_le DESC;
```

* **Modifier (v√©rifier propri√©taire)**

```sql
UPDATE commentaires
SET contenu = 'Commentaire modifi√©'
WHERE id = 5 AND utilisateur_id = 1;
```

* **Supprimer (v√©rifier propri√©taire)**

```sql
DELETE FROM commentaires WHERE id = 5 AND utilisateur_id = 1;
```

---

## 5) Requ√™tes avanc√©es (reporting)

* **Compter participants**

```sql
SELECT COUNT(*) AS nb_participants
FROM inscriptions
WHERE evenement_id = 2;
```

* **√âv√©nements avec nb d‚Äôinscrits**

```sql
SELECT e.id, e.nom, COUNT(i.utilisateur_id) AS nb_inscrits
FROM evenements e
LEFT JOIN inscriptions i ON e.id = i.evenement_id
GROUP BY e.id, e.nom
ORDER BY nb_inscrits DESC;
```

---

Si tu veux, je peux :

* Te fournir **la version Node.js** (`pool.query(...)`) pour chacune des requ√™tes du cahier de charges (pratique pour int√©grer directement dans tes routes).
* Ou g√©n√©rer un petit **README.md** pr√™t √† coller dans ton repo.

Tu pr√©f√®res que je te g√©n√®re directement les snippets Node.js correspondant ?

